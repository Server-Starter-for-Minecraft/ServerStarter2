name: Ref Commit to Redmine

on: 
  push: 

env:
  # RedmineのURL
  TARGET_URL: http://redmine-serverstarter2:3000
  
  # RedmineのプロジェクトID
  # 現在は v2.3.0 のプロジェクトにIssueを立てる設定となっているため，プロジェクト変更時はここを変更する
  # PROJECT_ID: 2
  
  # ステータスの番号（「作業中」の並び順番号を指定）
  TARGET_STATUS_ID_Progress: 2
  TARGET_STATUS_ID_Close: 5

jobs:
  notify_commit:
    runs-on: ubuntu-latest
    steps:
      # Tailescaleは https://zenn.dev/mimi_chan/articles/599841c45b4d49 の記事に従って設定する
      - name: Connect to Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TAILSCALE_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TAILSCALE_OAUTH_CLIENT_SECRET }}
          tags: tag:ci
      
      # pushに含まれるコミットメッセージ一覧を取得
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # ブランチを切った直後の場合，beforeが存在しないため000...となってしまうことに対する対策
      - name: Check before commit
        id: log_arg
        run: |
          if [[ "${{ github.event.before }}" == 0000000000000000000000000000000000000000 ]]; then
            echo "::set-output name=arg::${{ github.event.after }} -1"
          else
            echo "::set-output name=arg::${{ github.event.before }}..${{ github.event.after }}"
          fi

      - name: Get commit messages and Send a message to Redmine
        run: |
          commits=$(git log --format=%H ${{ steps.log_arg.outputs.arg }})
          echo "$commits" | while read -r commit_hash; do
            cmd='git log --format=%B ${commit_hash} -1'
            commit_message=$(eval ${cmd})
            if [[ $commit_message =~ [rR]ef#([0-9]+) ]]; then
              echo "{\"issue\":{\"status_id\":${{env.TARGET_STATUS_ID_Progress}},\"notes\":\"チケットが [$commit_message](https://github.com/${{github.repository}}/commit/$commit_hash) によって関連付けられました\"}}" > post.json
              curl -X PUT -H "Content-Type:application/json" -H "X-Redmine-API-Key:${{secrets.REDMINE_API_KEY}}" -d @post.json ${{env.TARGET_URL}}/issues/${BASH_REMATCH[1]}.json
            elif [[ $commit_message =~ [cC]lose#([0-9]+) ]]; then
              echo "{\"issue\":{\"status_id\":${{env.TARGET_STATUS_ID_Progress}},\"notes\":\"チケットは [$commit_message](https://github.com/${{github.repository}}/commit/$commit_hash) によって完了しました\"}}" > post.json
              curl -X PUT -H "Content-Type:application/json" -H "X-Redmine-API-Key:${{secrets.REDMINE_API_KEY}}" -d @post.json ${{env.TARGET_URL}}/issues/${BASH_REMATCH[1]}.json
            fi
          done